DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_namespace WHERE nspname = 'storedata') THEN
        EXECUTE 'CREATE SCHEMA storedata AUTHORIZATION baseadm';
    END IF;
END $$;

DROP TABLE IF EXISTS storedata.accounts;
DROP SEQUENCE IF EXISTS storedata.accounts_account_id_seq;

CREATE SEQUENCE storedata.accounts_account_id_seq INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1;

CREATE TABLE storedata.accounts (
    account_id BIGINT DEFAULT nextval('storedata.accounts_account_id_seq') NOT NULL,
    amount NUMERIC(10,2) NOT NULL,
    version BIGINT,
    user_id BIGINT NOT NULL,
    CONSTRAINT accounts_pkey PRIMARY KEY (account_id)
);

DROP TABLE IF EXISTS storedata.users;
DROP SEQUENCE IF EXISTS storedata.users_user_id_seq;

CREATE SEQUENCE storedata.users_user_id_seq INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1;

CREATE TABLE storedata.users (
    user_id BIGINT DEFAULT nextval('storedata.users_user_id_seq') NOT NULL,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255),
    enabled BOOLEAN DEFAULT false,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
);

DROP TABLE IF EXISTS storedata.users_roles;

CREATE TABLE storedata.users_roles (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id BIGINT,
    role VARCHAR(255),
    CONSTRAINT users_roles_pkey PRIMARY KEY (id)
);

ALTER TABLE ONLY storedata.accounts
    ADD CONSTRAINT fk_accounts_users FOREIGN KEY (user_id) REFERENCES storedata.users(user_id) ON DELETE CASCADE NOT DEFERRABLE;

ALTER TABLE ONLY storedata.users_roles
    ADD CONSTRAINT fk_users_roles FOREIGN KEY (user_id) REFERENCES storedata.users(user_id) NOT DEFERRABLE;

